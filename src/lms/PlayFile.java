/*
 * Created By: Duaa S
 * Creation Date: 21/Nov/2014
 * Description: Plays the video courses 
*/
package lms;

/*Imports*/
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JProgressBar;
import uk.co.caprica.vlcj.binding.LibVlc;
import uk.co.caprica.vlcj.binding.internal.libvlc_media_t;
import uk.co.caprica.vlcj.component.EmbeddedMediaListPlayerComponent;
import uk.co.caprica.vlcj.medialist.MediaList;
import uk.co.caprica.vlcj.player.MediaPlayer;
import uk.co.caprica.vlcj.player.MediaPlayerEventAdapter;
import uk.co.caprica.vlcj.player.MediaPlayerFactory;
import uk.co.caprica.vlcj.player.list.MediaListPlayer;
import uk.co.caprica.vlcj.player.list.MediaListPlayerEventAdapter;
import uk.co.caprica.vlcj.player.list.MediaListPlayerMode;
import uk.co.caprica.vlcj.runtime.RuntimeUtil;
  

public class PlayFile extends javax.swing.JFrame {
    
   String str_Driver;
   String str_ConnectionStr;
   String str_Username;
   String str_Password;
   Connection new_Connection;
   String str_SavePath;//savepath
   String str_PathFile;//savePath1
   PreparedStatement ps;
   ResultSet rs;
    
     //EmbeddedMediaPlayerComponent mediaPlayerComponent;  
    EmbeddedMediaListPlayerComponent mediaListListPlayerComponent=null;
    MediaList playList;
    MediaListPlayer mediaListPlayer;
    MediaPlayerFactory mediaFactory;
 
    JPanel slidePane = new JPanel();
    JPanel buttonPane = new JPanel();
    CardLayout card = new CardLayout();
    JButton btnPrevSlide=new JButton();
    JButton btnNextSlide=  new JButton();
    JLabel lblSlide;
        
    /**
     * Creates new form PlayFile
     */
    public PlayFile()  {
        initComponents();
        this.getContentPane().setBackground(Color.WHITE);
        setResizable(false);
        setLayout(new BorderLayout());
        playVideo();
    }
 
    /*Access values from the Properties File */
    public void getPropValues() throws IOException {
        try {
            Properties prop = new Properties();
            String propFileName = "Connection_Props.properties";
            InputStream inputStream = getClass().getResourceAsStream(propFileName);
            
            if (inputStream != null) {
                prop.load(inputStream);
            } else {
                throw new FileNotFoundException("Property file: '" + propFileName + "' not found in the classpath");
            }
            str_Driver=prop.getProperty("db_driver");
            str_ConnectionStr=prop.getProperty("connection_str");
            str_Username=prop.getProperty("username");
            str_Password=prop.getProperty("password");
            str_SavePath=prop.getProperty("save_path");
            str_PathFile=prop.getProperty("path_file");
            inputStream.close();
           
	} catch (IOException | NumberFormatException e) {
            System.out.println("Exception: " + e);
	} 		
	}
                                 

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jPanel2 = new javax.swing.JPanel();
        jProgressBar1 = new javax.swing.JProgressBar();
        btnPrev = new javax.swing.JButton();
        btnPlay = new javax.swing.JButton();
        btnPause = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("EDUBRIDGE CERTIFIED INDUSTRY PROGRAM");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 511, Short.MAX_VALUE)
        );

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lms/EdubridgeLogo.jpg"))); // NOI18N

        jInternalFrame1.setVisible(true);

        jPanel2.setPreferredSize(new java.awt.Dimension(648, 70));
        jPanel2.add(jProgressBar1);

        btnPrev.setText("PREV");
        jPanel2.add(btnPrev);

        btnPlay.setText("PLAY");
        jPanel2.add(btnPlay);

        btnPause.setText("PAUSE");
        jPanel2.add(btnPause);

        btnNext.setText("NEXT");
        jPanel2.add(btnNext);

        jInternalFrame1.getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_END);

        jMenu1.setText("COURSES");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        jMenu2.setText("LOGOUT");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jInternalFrame1, javax.swing.GroupLayout.PREFERRED_SIZE, 860, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jInternalFrame1))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
        new HomePage().setVisible(true);
    }//GEN-LAST:event_jMenu1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PlayFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PlayFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PlayFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PlayFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PlayFile().setVisible(true);
            }
        });
    }
       
     private void playVideo()
     {
        try {
            getPropValues();
        } catch (IOException ex) {
            Logger.getLogger(PlayFile.class.getName()).log(Level.SEVERE, null, ex);
        }
         jInternalFrame1.remove(slidePane);
         jInternalFrame1.remove(buttonPane);
         jPanel2.setVisible(true);
         try
         {
            String vlcpath=".\\lib";
            NativeLibrary.addSearchPath(RuntimeUtil.getLibVlcLibraryName(), vlcpath); 
            Native.loadLibrary(RuntimeUtil.getLibVlcLibraryName(), LibVlc.class);  
             
            mediaFactory = new MediaPlayerFactory();
          
            mediaListListPlayerComponent=new EmbeddedMediaListPlayerComponent();
            mediaListListPlayerComponent.getMediaListPlayer().addMediaListPlayerEventListener(new MediaListPlayerEventAdapter() {
               @Override
               public void nextItem(MediaListPlayer mediaListPlayer, libvlc_media_t item, String itemMrl) {
                   System.out.println("Playing next item: " + itemMrl + " (" + item + ")");
               }
           });
           //playList =  mediaFactory.newMediaList();
                
            Class.forName(str_Driver);
            new_Connection = DriverManager.getConnection(str_ConnectionStr, str_Username, str_Password);
            ps=new_Connection.prepareStatement("SELECT * FROM COURSE_MASTER");
            rs = ps.executeQuery();
            while(rs.next())
            {
                System.out.println(rs.getString("S_COURSENAME"));
                if(rs.getString("S_COURSENAME").endsWith(".mp4"))
                    {
                        String strPath=rs.getString("S_PATH").replace("/", "\\");
                        System.out.println(strPath);
                        mediaListListPlayerComponent.getMediaList().addMedia(strPath); 
                    }
             } 
            rs.close();
            ps.close();
            new_Connection.close();
        
            mediaListListPlayerComponent.getMediaListPlayer().setMode(MediaListPlayerMode.LOOP);
            jInternalFrame1.add(mediaListListPlayerComponent,BorderLayout.CENTER);
            
            //====================================
            mediaListListPlayerComponent.getMediaPlayer().addMediaPlayerEventListener(new UpdateBar());
            jProgressBar1 = new JProgressBar(0 ,100);
            jProgressBar1.setStringPainted(true);
            jPanel2.add(jProgressBar1,FlowLayout.LEADING);
            //====================================
      
            mediaListListPlayerComponent.getMediaListPlayer().play();
       
            btnPlay.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                mediaListListPlayerComponent.getMediaListPlayer().play();
            }
            });
            btnPause.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                mediaListListPlayerComponent.getMediaListPlayer().pause();
            }
            });
            btnPrev.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                mediaListListPlayerComponent.getMediaListPlayer().playPrevious();
            }
            });
            btnNext.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                mediaListListPlayerComponent.getMediaListPlayer().playNext();
            }
            });
      
            System.out.println("Running");              
        }
        catch(Exception e)
        {
            System.out.println(e.getMessage());
        }
     }
          
     private class UpdateBar extends MediaPlayerEventAdapter
    {
        @Override
        public void positionChanged(MediaPlayer mp,  float pos)
        {
            int value = Math.min(100,  Math.round(pos * 100.0f));
            jProgressBar1.setValue(value);
        }
    }
                    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPause;
    private javax.swing.JButton btnPlay;
    private javax.swing.JButton btnPrev;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JProgressBar jProgressBar1;
    // End of variables declaration//GEN-END:variables
}

