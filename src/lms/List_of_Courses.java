/*
 * Created By: Duaa S
 * Creation Date: 18/Nov/2014
 * Description: Dsplays all the available courses downloaded from the FTP in a table
*/

package lms;
/*Imports*/
import java.awt.Desktop;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

public class List_of_Courses extends javax.swing.JFrame {

   String str_Driver;
   String str_ConnectionStr;
   String str_Username;
   String str_Password;
   Connection new_Connection;
   PreparedStatement ps;
   ResultSet rs;
    
   /**
     * Creates new form List_of_Courses
     */
    public List_of_Courses() {
        try {
            initComponents();
            setTitle("MY COURSES");
            getCourses();
        } catch (SQLException ex) {
            Logger.getLogger(List_of_Courses.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlCourse = new javax.swing.JPanel();
        pnlListofCourses = new javax.swing.JPanel();
        lblData = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        lblSyncStatus = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnStartCourse = new javax.swing.JButton();
        btnLogOut = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setCellSelectionEnabled(true);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        org.jdesktop.layout.GroupLayout pnlListofCoursesLayout = new org.jdesktop.layout.GroupLayout(pnlListofCourses);
        pnlListofCourses.setLayout(pnlListofCoursesLayout);
        pnlListofCoursesLayout.setHorizontalGroup(
            pnlListofCoursesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlListofCoursesLayout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 452, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(lblData)
                .addContainerGap(17, Short.MAX_VALUE))
        );
        pnlListofCoursesLayout.setVerticalGroup(
            pnlListofCoursesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlListofCoursesLayout.createSequentialGroup()
                .addContainerGap()
                .add(pnlListofCoursesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 209, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lblData))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout pnlCourseLayout = new org.jdesktop.layout.GroupLayout(pnlCourse);
        pnlCourse.setLayout(pnlCourseLayout);
        pnlCourseLayout.setHorizontalGroup(
            pnlCourseLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlCourseLayout.createSequentialGroup()
                .addContainerGap()
                .add(pnlListofCourses, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, Short.MAX_VALUE)
                .add(lblSyncStatus)
                .addContainerGap())
        );
        pnlCourseLayout.setVerticalGroup(
            pnlCourseLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlCourseLayout.createSequentialGroup()
                .addContainerGap()
                .add(pnlCourseLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, pnlListofCourses, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, pnlCourseLayout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(lblSyncStatus)
                        .add(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnStartCourse.setText("Start Course");
        btnStartCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartCourseActionPerformed(evt);
            }
        });

        btnLogOut.setText("Log Out");
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(84, 84, 84)
                .add(btnStartCourse)
                .add(47, 47, 47)
                .add(btnBack)
                .add(39, 39, 39)
                .add(btnLogOut)
                .addContainerGap(129, Short.MAX_VALUE))
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(pnlCourse, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 498, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap(266, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnStartCourse)
                    .add(btnBack)
                    .add(btnLogOut))
                .addContainerGap())
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(25, Short.MAX_VALUE)
                    .add(pnlCourse, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(22, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        try {
            // int rowindex= jTable1.getSelectedRow();
            int selectedRow = jTable1.getSelectedRow();
            int selectedColumn = jTable1.getSelectedColumn();
            String videoname=(String) jTable1.getValueAt(selectedRow, selectedColumn);
            System.out.println(videoname);
            Class.forName(str_Driver);
            new_Connection = DriverManager.getConnection(str_ConnectionStr, str_Username,str_Password);
            ps=new_Connection.prepareStatement("SELECT S_COURSENAME,S_PATH FROM COURSE_MASTER WHERE S_COURSENAME='"+videoname+"'");
            rs=ps.executeQuery();
            while (rs.next())
            {
                Desktop.getDesktop().open(new File(rs.getString("s_Path")));
                //new PlayCourse(rs.getString("s_Path"));
            }
            rs.close();
            ps.close();
            new_Connection.close();
        } catch (ClassNotFoundException | SQLException | IOException ex) {
            Logger.getLogger(List_of_Courses.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void btnStartCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartCourseActionPerformed
        // TODO add your handling code here:
        new PlayFile().setVisible(true);
    }//GEN-LAST:event_btnStartCourseActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        new HomePage().setVisible(true);
        this.setVisible(false); 
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        // TODO add your handling code here:
        new Login().setVisible(true);
        this.setVisible(false); 
    }//GEN-LAST:event_btnLogOutActionPerformed

    private void getCourses() throws SQLException
    {
       
        DefaultTableModel model=new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column)
            {
                return false;//This causes all cells to be not editable
            }
            };
        jTable1.setModel(model);
        model.addColumn("List of Courses");
        try
        {
              Class.forName(str_Driver);
              new_Connection = DriverManager.getConnection(str_ConnectionStr, str_Username,str_Password);
              ps=new_Connection.prepareStatement("SELECT * FROM COURSE_MASTER");
              rs = ps.executeQuery();
              while(rs.next())
                {
                    System.out.println(rs.getString("s_Path"));
                    model.addRow(new Object[]{rs.getString("s_CourseName")});                     //i++;
                }
              rs.close();
              ps.close();
              new_Connection.close();
        }
        catch(ClassNotFoundException | SQLException ex)
        {
            System.out.println("Error: " + ex.getMessage());
        }
        
    }
    
    /*Access values from the Properties File */
    public void getPropValues() throws IOException {
        InputStream inputStream = null;
        try {
            Properties prop = new Properties();
            String propFileName = "Connection_Props.properties";
            inputStream = getClass().getResourceAsStream(propFileName);
            if (inputStream != null) {
                prop.load(inputStream);
            } else {
                throw new FileNotFoundException("Property file: '" + propFileName + "' not found in the classpath");
            }
            str_Driver=prop.getProperty("db_driver");
            str_ConnectionStr=prop.getProperty("connection_str");
            str_Username=prop.getProperty("username");
            str_Password=prop.getProperty("password");
           
	} catch (IOException | NumberFormatException e) {
            System.out.println("Exception: " + e);
	} finally {
              inputStream.close();
        }
		
	}
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(List_of_Courses.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(List_of_Courses.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(List_of_Courses.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(List_of_Courses.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new List_of_Courses().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnLogOut;
    private javax.swing.JButton btnStartCourse;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblData;
    private javax.swing.JLabel lblSyncStatus;
    private javax.swing.JPanel pnlCourse;
    private javax.swing.JPanel pnlListofCourses;
    // End of variables declaration//GEN-END:variables
}
